// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: newsletter/newsletter.proto

package newsletter

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	common "github/eggnocent/app-grpc-eccomerce/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeNewsLetterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeNewsLetterRequest) Reset() {
	*x = SubscribeNewsLetterRequest{}
	mi := &file_newsletter_newsletter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeNewsLetterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNewsLetterRequest) ProtoMessage() {}

func (x *SubscribeNewsLetterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_newsletter_newsletter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNewsLetterRequest.ProtoReflect.Descriptor instead.
func (*SubscribeNewsLetterRequest) Descriptor() ([]byte, []int) {
	return file_newsletter_newsletter_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeNewsLetterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SubscribeNewsLetterRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

type SubscribeNewsLetterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *common.BaseResponse   `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeNewsLetterResponse) Reset() {
	*x = SubscribeNewsLetterResponse{}
	mi := &file_newsletter_newsletter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeNewsLetterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNewsLetterResponse) ProtoMessage() {}

func (x *SubscribeNewsLetterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_newsletter_newsletter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNewsLetterResponse.ProtoReflect.Descriptor instead.
func (*SubscribeNewsLetterResponse) Descriptor() ([]byte, []int) {
	return file_newsletter_newsletter_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeNewsLetterResponse) GetBase() *common.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

var File_newsletter_newsletter_proto protoreflect.FileDescriptor

const file_newsletter_newsletter_proto_rawDesc = "" +
	"\n" +
	"\x1bnewsletter/newsletter.proto\x12\n" +
	"newsletter\x1a\x1acommon/base-response.proto\x1a\x1bbuf/validate/validate.proto\"i\n" +
	"\x1aSubscribeNewsLetterRequest\x12\"\n" +
	"\x05email\x18\x01 \x01(\tB\f\xbaH\tr\a\x10\x01\x18\xff\x01`\x01R\x05email\x12'\n" +
	"\tfull_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xff\x01R\bfullName\"G\n" +
	"\x1bSubscribeNewsLetterResponse\x12(\n" +
	"\x04base\x18\x01 \x01(\v2\x14.common.BaseResponseR\x04base2{\n" +
	"\x11NewsletterService\x12f\n" +
	"\x13SubscribeNewsLetter\x12&.newsletter.SubscribeNewsLetterRequest\x1a'.newsletter.SubscribeNewsLetterResponseB3Z1github/eggnocent/app-grpc-eccomerce/pb/newsletterb\x06proto3"

var (
	file_newsletter_newsletter_proto_rawDescOnce sync.Once
	file_newsletter_newsletter_proto_rawDescData []byte
)

func file_newsletter_newsletter_proto_rawDescGZIP() []byte {
	file_newsletter_newsletter_proto_rawDescOnce.Do(func() {
		file_newsletter_newsletter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_newsletter_newsletter_proto_rawDesc), len(file_newsletter_newsletter_proto_rawDesc)))
	})
	return file_newsletter_newsletter_proto_rawDescData
}

var file_newsletter_newsletter_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_newsletter_newsletter_proto_goTypes = []any{
	(*SubscribeNewsLetterRequest)(nil),  // 0: newsletter.SubscribeNewsLetterRequest
	(*SubscribeNewsLetterResponse)(nil), // 1: newsletter.SubscribeNewsLetterResponse
	(*common.BaseResponse)(nil),         // 2: common.BaseResponse
}
var file_newsletter_newsletter_proto_depIdxs = []int32{
	2, // 0: newsletter.SubscribeNewsLetterResponse.base:type_name -> common.BaseResponse
	0, // 1: newsletter.NewsletterService.SubscribeNewsLetter:input_type -> newsletter.SubscribeNewsLetterRequest
	1, // 2: newsletter.NewsletterService.SubscribeNewsLetter:output_type -> newsletter.SubscribeNewsLetterResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_newsletter_newsletter_proto_init() }
func file_newsletter_newsletter_proto_init() {
	if File_newsletter_newsletter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_newsletter_newsletter_proto_rawDesc), len(file_newsletter_newsletter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_newsletter_newsletter_proto_goTypes,
		DependencyIndexes: file_newsletter_newsletter_proto_depIdxs,
		MessageInfos:      file_newsletter_newsletter_proto_msgTypes,
	}.Build()
	File_newsletter_newsletter_proto = out.File
	file_newsletter_newsletter_proto_goTypes = nil
	file_newsletter_newsletter_proto_depIdxs = nil
}
